version: "3.8"
services:
  app:
    # fase build
    build:
      # context adalah path dari file Dockerfile
      context: .
      dockerfile: Dockerfile
    # nama image hasil build
    image: go-learn-docker
    container_name: container-go-learn-docker
    # environment yang akan digunakan pada aplikasi
    environment:
      # menggunakan service name daripada alamat ip agar bisa connect ke container mysql
      - MYSQL_USER_DSN=root:password@tcp(db_mysql:3306)/db_user?parseTime=true
      - MYSQL_TIMEOUT_MS=3000
      - MYSQL_MAX_OPEN_CONN=10
      - MYSQL_MAX_CONN_LIFETIME_SECOND=10
      - MYSQL_MAX_IDLE_CONN=10
      - API_TIMEOUT=5
      - DEFAULT_LIMIT=20
    ports:
      - 9999:9999
    restart: always
    depends_on:
      db_mysql:
        condition: service_healthy
  db_mysql:
    image: mysql:latest
    restart: always
    environment:
      MYSQL_DATABASE: db_user
      MYSQL_ROOT_USER: root
      MYSQL_ROOT_PASSWORD: password
      MYSQL_ROOT_HOST: '%' # untuk allow root connection di luar container
    ports:
      - 3306:3306
    expose:
      - 3306
    volumes:
      - mysql-db-volume:/var/lib/mysql
      - ./internal/db/init.sql:/docker-entrypoint-initdb.d/init.sql # mount init script sql ke docker entrypoint saat start up
    healthcheck:
      test: ["CMD", 'mysqladmin', 'ping', '-h', 'localhost', '-u', 'root', '-p$$MYSQL_ROOT_PASSWORD' ]
      timeout: 20s
      retries: 10

volumes:
  mysql-db-volume: